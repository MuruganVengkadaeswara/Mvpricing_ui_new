[{"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/index.js":"1","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/App.js":"2","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/reportWebVitals.js":"3","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/NavBar/MainNavbar.jsx":"4","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddService/AddService.jsx":"5","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlan.jsx":"6","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateAdditionalPrice/UpdateAdditionalPrice.jsx":"7","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/HomeContents/HomeContents.jsx":"8","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProduct.jsx":"9","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllServices/AllServices.jsx":"10","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddProduct/AddProduct.jsx":"11","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddBundle/AddBundle.jsx":"12","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllProducts/AllProducts.jsx":"13","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllBundles/AllBundles.jsx":"14","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllPlans/AllPlans.jsx":"15","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProductService/UpdateProductService.jsx":"16","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ProductDataService.js":"17","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ServiceDataService.js":"18","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/PlanDataService.js":"19","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/BundleDataService.js":"20","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanExistingProduct/AddPlanExistingProduct.jsx":"21","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanNewProd/AddPlanNew.jsx":"22","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdatePlan/UpdatePlan.jsx":"23","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateBundle/UpdateBundle.jsx":"24"},{"size":500,"mtime":1609322781003,"results":"25","hashOfConfig":"26"},{"size":270,"mtime":1609324095706,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1609322781003,"results":"28","hashOfConfig":"26"},{"size":4865,"mtime":1609417636246,"results":"29","hashOfConfig":"26"},{"size":1670,"mtime":1609131694095,"results":"30","hashOfConfig":"26"},{"size":1136,"mtime":1609135296491,"results":"31","hashOfConfig":"26"},{"size":1865,"mtime":1609390030346,"results":"32","hashOfConfig":"26"},{"size":507,"mtime":1609137533829,"results":"33","hashOfConfig":"26"},{"size":2654,"mtime":1609332867962,"results":"34","hashOfConfig":"26"},{"size":2357,"mtime":1609389935093,"results":"35","hashOfConfig":"26"},{"size":9372,"mtime":1609389935093,"results":"36","hashOfConfig":"26"},{"size":4388,"mtime":1609389935093,"results":"37","hashOfConfig":"26"},{"size":3328,"mtime":1609389935093,"results":"38","hashOfConfig":"26"},{"size":2646,"mtime":1609398762022,"results":"39","hashOfConfig":"26"},{"size":2787,"mtime":1609394698056,"results":"40","hashOfConfig":"26"},{"size":4171,"mtime":1609413028665,"results":"41","hashOfConfig":"26"},{"size":985,"mtime":1609392430085,"results":"42","hashOfConfig":"26"},{"size":678,"mtime":1608989617535,"results":"43","hashOfConfig":"26"},{"size":534,"mtime":1608989973359,"results":"44","hashOfConfig":"26"},{"size":574,"mtime":1609130062126,"results":"45","hashOfConfig":"26"},{"size":3554,"mtime":1609390157511,"results":"46","hashOfConfig":"26"},{"size":10421,"mtime":1609390106983,"results":"47","hashOfConfig":"26"},{"size":3179,"mtime":1609398448232,"results":"48","hashOfConfig":"26"},{"size":3656,"mtime":1609412729959,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1r5sc7a",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/index.js",[],["112","113"],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/App.js",["114"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport MainNavBar from \"./components/NavBar/MainNavbar\";\n\nfunction App() {\n  return (\n    <div>\n      <MainNavBar />\n    </div>\n  );\n}\n\nexport default App;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/reportWebVitals.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/NavBar/MainNavbar.jsx",["115","116","117","118","119","120"],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddService/AddService.jsx",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlan.jsx",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateAdditionalPrice/UpdateAdditionalPrice.jsx",["121","122"],"import React, { useState, useEffect } from \"react\";\nimport productDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ProductDataService.js\";\nimport { Alert, Table, Button } from \"react-bootstrap\";\n\nconst UpdateAdditionalPrice = props => {\n  const [product, setProduct] = useState({\n    productId: \"\",\n    productName: \"\",\n    additionalPrices: []\n  });\n\n  const [alert, setAlert] = useState();\n\n  let id = props.location.id;\n\n  useEffect(() => {\n    productDataService\n      .getProductById(id)\n      .then(res => {\n        setProduct(res.data.response);\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">Unable to fetch product</Alert>);\n      });\n  }, []);\n\n  return (\n    <div className=\"card card-body offset-md-2 col-md-8 mt-5\">\n      <h2>Update Additional Price</h2>\n      <hr></hr>\n      <h4>Product Name : {product.productName}</h4>\n      <Table responsive>\n        <thead>\n          <tr>\n            <th>Additional Price Id</th>\n            <th>Price</th>\n            <th>Description</th>\n            <th>Update</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {product.additionalPrices.map(price => {\n            return (\n              <tr>\n                <td>{price.addlPriceId}</td>\n                <td>{price.price}</td>\n                <td>{price.description}</td>\n                <td>\n                  <Button variant=\"info\">Update</Button>\n                </td>\n                <td>\n                  <Button variant=\"danger\">Delete</Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <hr></hr>\n      <Button variant=\"info\" className=\"col-md-3 offset-md-9\">\n        Add Additional Price\n      </Button>\n    </div>\n  );\n};\n\nexport default UpdateAdditionalPrice;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/HomeContents/HomeContents.jsx",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProduct.jsx",["123","124","125"],"import React, { useEffect, useState } from \"react\";\nimport ProductDataService from \"../Services/ProductDataService\";\nimport { Tab, Table, Form, Button, Alert } from \"react-bootstrap\";\n\nconst UpdateProduct = props => {\n  const [product, setProduct] = useState({\n    price: { price: \"\" }\n  });\n  const [bool, setBool] = useState(0);\n  const [price, setPrice] = useState({\n    productId: \"\",\n    price: \"\",\n    prodPriceId: \"\"\n  });\n  const [alert, setAlert] = useState();\n\n  let id = props.location.id;\n  useEffect(() => {\n    console.log(props.location.id);\n    ProductDataService.getProductById(id)\n      .then(res => {\n        if (!res.data.error) {\n          console.log(res.data.response);\n\n          setProduct(res.data.response);\n          setPrice(prevState => {\n            return {\n              ...prevState,\n              productId: res.data.response.productId,\n              prodPriceId: res.data.response.price.prodPriceId\n            };\n          });\n          console.log(product);\n          setBool(1);\n        }\n      })\n      .catch(res => {\n        console.log(\"Product Not found\");\n      });\n  }, [bool]);\n\n  const updatePrice = () => {\n    console.log(price);\n\n    ProductDataService.updateProductPrice(price)\n      .then(res => {\n        if (res.data.error) {\n          setAlert(<Alert variant=\"danger\">Unable to update price</Alert>);\n        } else {\n          setAlert(<Alert variant=\"success\">Price updated successfully</Alert>);\n          console.log(res.data);\n\n          setTimeout(() => {\n            props.history.push(\"/products\");\n          }, 1000);\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"card card-body offset-md-2 col-md-8 mt-5\">\n      <h2>Update Product</h2>\n      <hr></hr>\n      {alert}\n      <h4>Product id : {product.productId}</h4>\n      <br></br>\n      <br></br>\n      <h4>Product Name : {product.productName}</h4>\n      <hr></hr>\n      <Form>\n        <Form.Group>\n          <Form.Label>Product Price :</Form.Label>\n          <Form.Control\n            defaultValue={product.price.price}\n            type=\"number\"\n            onChange={e => {\n              const val = e.target.value;\n              setPrice(prevState => {\n                return { ...prevState, price: val };\n              });\n            }}\n          ></Form.Control>\n        </Form.Group>\n        <Button\n          variant=\"success\"\n          className=\"offset-md-10\"\n          onClick={updatePrice}\n        >\n          Update Price\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default UpdateProduct;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllServices/AllServices.jsx",["126"],"import React, { useEffect, useState } from \"react\";\nimport { Table, Button, Alert } from \"react-bootstrap\";\nimport serviceDataService from \"../Services/ServiceDataService\";\n\nconst AllServices = (props) => {\n  const [services, SetServices] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    serviceDataService\n      .getAllServices()\n      .then((res) => {\n        if (!res.data.error) {\n          SetServices(res.data.response);\n        }\n        else{\n          setAlert(<Alert variant=\"danger\">unable to connect</Alert>)\n        }\n      })\n      .catch((res) => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        }\n      });\n  }, [alert]);\n\n  const deleteService = (id) => {\n    serviceDataService\n      .deleteServiceById(id)\n      .then((res) => {\n        console.log(res.data);\n        setAlert(<Alert variant=\"success\">Deleted successfully</Alert>);\n      })\n      .catch((res) => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-6 offset-md-3 mt-5 card card-body\">\n      {alert}\n      <Table responsive striped bordered>\n        <thead>\n          <tr>\n            <th>\n              <h3>Service Id</h3>\n            </th>\n            <th>\n              <h3>Service Name</h3>\n            </th>\n            <th>\n              <h3>Action</h3>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {services.map((service) => {\n            return (\n              <tr key={service.serviceId}>\n                <td>\n                  <h5>\n                    <strong>{service.serviceId}</strong>\n                  </h5>\n                </td>\n                <td>\n                  <h5>\n                    <strong>{service.serviceName}</strong>\n                  </h5>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    id={service.serviceId}\n                    onClick={() => deleteService(service.serviceId)}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllServices;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddProduct/AddProduct.jsx",["127","128","129","130"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Alert, Table } from \"react-bootstrap\";\nimport \"./addproduct.css\";\nimport productDataService from \"../Services/ProductDataService\";\nimport serviceDataService from \"../Services/ServiceDataService\";\n\nconst AddProduct = props => {\n  const [product, setProduct] = useState({\n    productName: \"\",\n    price: {\n      price: \"\"\n    },\n    additionalPrices: [],\n    services: []\n  });\n  const [services, setServices] = useState([]);\n  const [serv, setServ] = useState({});\n  const [addl, setAddl] = useState({});\n  const [alert, setAlert] = useState();\n\n  const Servi = (\n    <Form name=\"serviceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Services</h3>\n          <hr></hr>\n        </Form.Label>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Select service</h5>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, serviceId: val };\n                  });\n                }}\n              >\n                {services.map(service => {\n                  return (\n                    <option key={service.serviceId} value={service.serviceId}>\n                      {service.serviceName}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>service price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, servicePrice: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Free Units</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, freeUnits: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>Unit Type</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, unitType: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many services as you want\n      </Alert>\n    </Form>\n  );\n\n  const addlp = (\n    <Form name=\"addlPriceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Additional Prices</h3>\n        </Form.Label>\n        <hr></hr>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setAddl(prevState => {\n                    return { ...prevState, price: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Label>\n              <h5>Description</h5>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={e => {\n                const val = e.target.value;\n                setAddl(prevState => {\n                  return { ...prevState, description: val };\n                });\n              }}\n            ></Form.Control>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many Additional Prices as you want\n      </Alert>\n    </Form>\n  );\n\n  useEffect(() => {\n    serviceDataService.getAllServices().then(res => {\n      console.log(res.data);\n      setServices(res.data.response);\n    }).catch((res)=>{\n      setAlert(<Alert variant=\"danger\">unable to connect</Alert>)\n    });\n  }, []);\n\n  const addProduct = e => {\n    e.preventDefault();\n    console.log(product);\n    productDataService\n      .addProduct(product)\n      .then(res => {\n        if (res.data.error) {\n          setAlert(<Alert variant=\"danger\">{res.data.response}</Alert>);\n        } else {\n          setAlert(<Alert variant=\"success\">Product Added successfully</Alert>);\n          window.prodForm.reset();\n          window.scrollTo({\n            behavior: \"smooth\",\n            top: 0\n          });\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n        window.scrollTo({\n          behavior: \"smooth\",\n          top: 0\n        });\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-6 offset-md-3 mt-5 card card-body\">\n        {alert}\n        <h2>\n          <strong>Add Product</strong>\n        </h2>\n        <hr></hr>\n        <Form onSubmit={addProduct} name=\"prodForm\">\n          <Form.Group>\n            <Form.Label>\n              <h3>Product Name</h3>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={e => {\n                const val = e.target.value;\n                setProduct(prevState => {\n                  return { ...prevState, productName: val };\n                });\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              <h3>Product Price</h3>\n            </Form.Label>\n            <Form.Control\n              type=\"number\"\n              onChange={e => {\n                const val = e.target.value;\n                setProduct(prevState => {\n                  return { ...prevState, price: { price: val } };\n                });\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <div>{Servi}</div>\n          {product.services.map(service => {\n            let name;\n            if (\n              services.find(o => o.serviceId == service.serviceId) != undefined\n            ) {\n              name = services.find(o => o.serviceId == service.serviceId)\n                .serviceName;\n            }\n\n            return (\n              <div className=\"card card-body mb-3\">\n                <Alert variant=\"info\">\n                  {name} @ {service.servicePrice} &#8377; with{\" \"}\n                  {service.freeUnits} {service.unitType} free &emsp;\n                </Alert>\n              </div>\n            );\n          })}\n          <Button\n            className=\"offset-md-10\"\n            variant=\"info\"\n            onClick={() => {\n              if (\n                serv.serviceId != null &&\n                serv.servicePrice != null &&\n                serv.freeUnits != null &&\n                serv.unitType\n              ) {\n                setProduct(prevState => {\n                  return {\n                    ...prevState,\n                    services: [...prevState.services, serv]\n                  };\n                });\n                setServ([]);\n                document.serviceForm.reset();\n                console.log(product);\n              }\n            }}\n          >\n            <strong>Add Service</strong>\n          </Button>\n          <hr></hr>\n          <div>{addlp}</div>\n          {product.additionalPrices.map(price => {\n            return (\n              <div className=\"card card-body mb-3\">\n                <Alert variant=\"info\">\n                  {price.description} @ {price.price} &#8377;\n                </Alert>\n              </div>\n            );\n          })}\n          <Button\n            className=\"offset-md-9\"\n            variant=\"info\"\n            onClick={() => {\n              if (addl.description != null && addl.price != null) {\n                setProduct(prevState => {\n                  return {\n                    ...prevState,\n                    additionalPrices: [...prevState.additionalPrices, addl]\n                  };\n                });\n                document.addlPriceForm.reset();\n                setAddl([]);\n                console.log(product);\n              }\n            }}\n          >\n            <strong>Add additional price</strong>\n          </Button>\n          <hr></hr>\n          <Button\n            className=\"offset-5\"\n            size=\"lg\"\n            variant=\"success\"\n            type=\"submit\"\n            onClick={addProduct}\n          >\n            <strong>Add</strong>\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProduct;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddBundle/AddBundle.jsx",["131","132","133","134"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Button, Alert } from \"react-bootstrap\";\nimport productDataService from \"../Services/ProductDataService\";\nimport bundleDataService from \"../Services/BundleDataService\";\n\nconst AddBundle = (props) => {\n  const [products, Setproducts] = useState([]);\n  const [bundle, setBundle] = useState({\n    bundleName: \"\",\n    bundleType: \"\",\n    bundleProducts: [],\n  });\n  const [alert, setAlert] = useState();\n  const [prod, setProd] = useState(0);\n\n  useEffect(() => {\n    productDataService\n      .getAllProducts()\n      .then((res) => {\n        console.log(products);\n        Setproducts(res.data.response);\n      })\n      .catch((res) => {\n        setAlert(<Alert variant=\"danger\">unable to connect</Alert>);\n      });\n  }, []);\n\n  const addBundle = (e) => {\n    e.preventDefault();\n    console.log(bundle);\n    bundleDataService\n      .addBundle(bundle)\n      .then((res) => {\n        if (res.data.error) {\n          setAlert(<Alert variant=\"danger\">Unable to add Bundle</Alert>);\n        } else {\n          setAlert(<Alert variant=\"success\">Bundle Added Successfully</Alert>);\n          document.bundleForm.reset();\n        }\n      })\n      .catch((res) => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 card card-body offset-md-2 mt-5\">\n      <h1>\n        <strong>Add Bundle</strong>\n      </h1>\n      {alert}\n      <hr></hr>\n      <Form onSubmit={addBundle} name=\"bundleForm\">\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h3>Bundle Name</h3>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => {\n                  const val = e.target.value;\n                  setBundle((prevState) => {\n                    return { ...prevState, bundleName: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Label>\n              <h3>Bundle Type</h3>\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => {\n                const val = e.target.value;\n                setBundle((prevState) => {\n                  return { ...prevState, bundleType: val };\n                });\n              }}\n            >\n              <option value=\"monthly\">Monthly</option>\n              <option value=\"yearly\">Yearly</option>\n              <option value=\"weekly\">Weekly</option>\n              <option value=\"daily\">Daily</option>\n            </Form.Control>\n          </Col>\n        </Form.Row>\n        <Form.Group>\n          <Form.Label>\n            <h2>Add Product</h2>\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => {\n              const val = e.target.value;\n              setProd(val);\n            }}\n          >\n            {products.map((product) => {\n              return (\n                <option key={product.productId} value={product.productId}>\n                  {product.productName}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"info\"\n            className=\"offset-md-10 mb-2\"\n            onClick={() => {\n              setBundle((prevState) => {\n                return {\n                  ...prevState,\n                  bundleProducts: [\n                    ...prevState.bundleProducts,\n                    { productId: prod },\n                  ],\n                };\n              });\n              console.log(bundle);\n            }}\n          >\n            <strong>Add Product</strong>\n          </Button>\n          {bundle.bundleProducts.map((bp) => {\n            let name;\n            if (\n              products.find((o) => o.productId == bp.productId) != undefined\n            ) {\n              name = products.find((o) => o.productId == bp.productId)\n                .productName;\n            }\n            return <Alert variant=\"info\">Product : {name}</Alert>;\n          })}\n        </div>\n        <Button variant=\"success\" className=\"offset-md-5\" type=\"submit\">\n          <strong>Make Bundle</strong>\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddBundle;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllProducts/AllProducts.jsx",["135"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Alert } from \"react-bootstrap\";\nimport ProductDataService from \"../Services/ProductDataService\";\n\nconst AllProducts = (props) => {\n  const [products, setProducts] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    ProductDataService.getAllProducts()\n      .then((res) => {\n        console.log(res.data);\n        setProducts(res.data.response);\n      })\n      .catch((res) => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        }\n      });\n  }, [alert]);\n\n  const deleteProduct = (id) => {\n    ProductDataService.deleteProductById(id)\n      .then((res) => {\n        if (!res.data.error) {\n          setAlert(\n            <Alert variant=\"success\">Product Deleted Successfully</Alert>\n          );\n        }\n      })\n      .catch((res) => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 offset-md-2 mt-5 card card-body\">\n      <h1>\n        <strong>All Products</strong>\n      </h1>\n      {alert}\n      <hr></hr>\n      <Table responsive striped bordered>\n        <thead>\n          <tr>\n            <th>Product Id</th>\n            <th>Product Name</th>\n            <th>Product Price</th>\n            <th>Product Services</th>\n            <th>Additional Prices</th>\n            <th>Action</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {products.map((product) => {\n            return (\n              <tr key={product.productId}>\n                <td>{product.productId}</td>\n                <td>{product.productName}</td>\n                <td>&#8377; {product.price.price} </td>\n                <td>\n                  {product.services.map((s) => {\n                    return (\n                      <h6 key={s.serviceId}>\n                        {s.service.serviceName} @ {s.servicePrice} &#8377; /{\" \"}\n                        {s.unitType}\n                        &emsp; ( {s.freeUnits} {s.unitType} free)\n                      </h6>\n                    );\n                  })}\n                </td>\n                <td>\n                  {product.additionalPrices.map((price) => {\n                    return (\n                      <h6>\n                        {price.description} @ {price.price} &#8377;\n                      </h6>\n                    );\n                  })}\n                </td>\n                <td>\n                  <Button\n                    variant=\"info\"\n                    onClick={() => {\n                      props.history.push({\n                        pathname: \"/updateproduct\",\n                        id: product.productId,\n                      });\n                    }}\n                  >\n                    Update\n                  </Button>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => deleteProduct(product.productId)}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllProducts;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllBundles/AllBundles.jsx",["136"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Alert, Button } from \"react-bootstrap\";\nimport bundleDataService from \"../Services/BundleDataService\";\n\nconst AllBundles = props => {\n  const [bundles, setBundles] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    bundleDataService\n      .getAllBundles()\n      .then(res => {\n        if (!res.data.error) {\n          setBundles(res.data.response);\n        }\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        }\n      });\n  }, [alert]);\n\n  const deleteBundle = id => {\n    bundleDataService\n      .deleteBundleById(id)\n      .then(res => {\n        if (!res.data.error) {\n          setAlert(\n            <Alert variant=\"success\">Bundle Deleted Successfully</Alert>\n          );\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 offset-md-2 card card-body mt-5\">\n      <h4>\n        <strong>All Bundles</strong>\n      </h4>\n      {alert}\n      <Table responsive striped bordered>\n        <thead>\n          <tr>\n            <th>Bundle Name</th>\n            <th>Bundle Products</th>\n            <th>Bundle Type</th>\n            <th>Action</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {bundles.map(bundle => {\n            return (\n              <tr>\n                <td>{bundle.bundleName}</td>\n                <td>\n                  {bundle.bundleProducts.map(bp => {\n                    return <h6>{bp.product.productName}</h6>;\n                  })}\n                </td>\n                <td>{bundle.bundleType}</td>\n                <td>\n                  <Button\n                    variant=\"info\"\n                    onClick={() => {\n                      props.history.push({\n                        pathname: \"/updatebundle\",\n                        id: bundle.bundleId\n                      });\n                    }}\n                  >\n                    Update\n                  </Button>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                      deleteBundle(bundle.bundleId);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllBundles;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllPlans/AllPlans.jsx",["137","138","139"],"import React, { useEffect, useState } from \"react\";\nimport PlanDataService from \"../Services/PlanDataService\";\nimport { Alert, Table, Button } from \"react-bootstrap\";\n\nconst AllPlans = props => {\n  const [plans, setPlans] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    PlanDataService.getAllPlans()\n      .then(res => {\n        if (!res.data.error) {\n          setPlans(res.data.response);\n          console.log(plans);\n        }\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        }\n      });\n  }, [alert]);\n\n  const deletePlan = id => {\n    PlanDataService.deletePlanById(id)\n      .then(res => {\n        if (!res.data.error) {\n          setAlert(<Alert variant=\"success\">Plan Deleted Successfully</Alert>);\n        }\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        } else {\n          setAlert(<Alert variant=\"danger\">Unable to connect</Alert>);\n        }\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 offset-md-2 card card-body mt-5\">\n      <h1>\n        <strong>All Plans</strong>\n      </h1>\n\n      {alert}\n      <hr></hr>\n      <Table responsive bordered striped>\n        <thead>\n          <tr>\n            <th>Plan Id</th>\n            <th>Plan Name</th>\n            <th>Plan Type</th>\n            <th>plan Product</th>\n            <th>Action</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {plans.map(plan => {\n            return (\n              <tr key={plan.planId}>\n                <td>{plan.planId}</td>\n                <td>{plan.planName}</td>\n                <td>{plan.planType}</td>\n                <td>\n                  {plan.product.productName} @ Rs.{plan.product.price.price}\n                </td>\n                <td>\n                  <Button\n                    variant=\"info\"\n                    onClick={() => {\n                      props.history.push({\n                        pathname: \"/updateplan\",\n                        id: plan.planId\n                      });\n                    }}\n                  >\n                    Update\n                  </Button>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                      deletePlan(plan.planId);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllPlans;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProductService/UpdateProductService.jsx",["140","141","142","143"],"import React, { useState, useEffect } from \"react\";\nimport productDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ProductDataService.js\";\nimport serviceDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ServiceDataService.js\";\n\nimport { Alert, Table, Button, Form, Col } from \"react-bootstrap\";\n\nconst UpdateProductService = props => {\n  const [product, setProduct] = useState({\n    services: []\n  });\n  const [alert, setAlert] = useState();\n\n  const [bool, setBool] = useState(0);\n\n  const [addserv, setAddServ] = useState();\n\n  const [services, setServices] = useState([]);\n\n  const [click, setClick] = useState(0);\n\n  let id = props.location.id;\n\n  useEffect(() => {\n    productDataService\n      .getProductById(id)\n      .then(res => {\n        setProduct(res.data.response);\n        setBool(1);\n        console.log(res.data.response);\n        console.log(res.data.response.services);\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">Unable to fetch the product</Alert>);\n      });\n\n    serviceDataService.getAllServices().then(res => {\n      console.log(res.data.response);\n      setServices(res.data.response)\n    });\n  }, []);\n\n  const deleteService = id => {\n    console.log(id);\n  };\n\n  let addServiceEle = (\n    <Form>\n      <h4>Add Service</h4>\n      <hr></hr>\n      <Form.Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>Select Service</Form.Label>\n            <Form.Control as=\"select\">\n              <option>select</option>\n              {services.map(serv => {\n                return (\n                  <option value={serv.serviceId}>{serv.serviceName}</option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Label>Service Price</Form.Label>\n          <Form.Control type=\"tel\"></Form.Control>\n        </Col>\n        <Col>\n          <Form.Label>Free units</Form.Label>\n          <Form.Control type=\"tel\"></Form.Control>\n        </Col>\n        <Col>\n          <Form.Label>Unit Type</Form.Label>\n          <Form.Control type=\"text\"></Form.Control>\n        </Col>\n      </Form.Row>\n      <Form.Group></Form.Group>\n      <Button variant=\"info\" className=\"offset-md-11\">\n        Add\n      </Button>\n      <hr></hr>\n    </Form>\n  );\n\n  return (\n    <div className=\"col-md-8 offset-md-2 card card-body mt-5\">\n      <h2>Update Product Service</h2>\n      <hr></hr>\n      <h3>productName : {product.productName}</h3>\n      <hr></hr>\n      <Table responsive>\n        <thead>\n          <tr>\n            <th>Product Service id</th>\n            <th>Service Name</th>\n            <th>Service Price</th>\n            <th>Free Units</th>\n            <th>Update</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {product.services.map(serv => {\n            return (\n              <tr>\n                <td>{serv.psId}</td>\n                <td>{serv.service.serviceName}</td>\n                <td>\n                  <Form.Control\n                    type=\"tel\"\n                    defaultValue={serv.servicePrice}\n                  ></Form.Control>\n                </td>\n                <td>\n                  <Form.Control\n                    type=\"tel\"\n                    defaultValue={serv.freeUnits}\n                  ></Form.Control>\n                </td>\n                <td>\n                  <Button variant=\"info\">Update</Button>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => deleteService(serv.psId)}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <hr></hr>\n      {addserv}\n      <Button\n        variant=\"info\"\n        onClick={() => {\n          setAddServ(addServiceEle);\n          setClick(1);\n        }}\n        className=\"col-md-3 offset-md-9\"\n      >\n        Add More Services\n      </Button>\n    </div>\n  );\n};\n\nexport default UpdateProductService;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ProductDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ServiceDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/PlanDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/BundleDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanExistingProduct/AddPlanExistingProduct.jsx",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanNewProd/AddPlanNew.jsx",["144","145","146"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Alert } from \"react-bootstrap\";\nimport serviceDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ServiceDataService.js\";\nimport planDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/PlanDataService.js\";\n\nconst AddPlanNew = props => {\n  const [services, setServices] = useState([]);\n  const [product, setProduct] = useState({\n    productName: \"\",\n    price: {\n      price: \"\"\n    },\n    additionalPrices: [],\n    services: []\n  });\n  const [plan, setPlan] = useState({\n    planName: \"\",\n    planType: \"\",\n    product: {}\n  });\n  const [serv, setServ] = useState({});\n  const [addl, setAddl] = useState({});\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    serviceDataService\n      .getAllServices()\n      .then(res => {\n        setServices(res.data.response);\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">unable to connect</Alert>);\n      });\n  }, []);\n\n  const addPlan = e => {\n    e.preventDefault();\n    setPlan(prevState => {\n      return { ...prevState, product: product };\n    });\n    planDataService\n      .addPlan(plan)\n      .then(res => {\n        if (!res.data.error) {\n          setAlert(<Alert variant=\"success\">Plan Added successfully</Alert>);\n          window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n          });\n          document.planform.reset();\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      });\n  };\n\n  const Servi = (\n    <Form name=\"serviceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Services</h3>\n          <hr></hr>\n        </Form.Label>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Select service</h5>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, serviceId: val };\n                  });\n                }}\n              >\n                {services.map(service => {\n                  return (\n                    <option value={service.serviceId}>\n                      {service.serviceName}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>service price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, servicePrice: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Free Units</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, freeUnits: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>Unit Type</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, unitType: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many services as you want\n      </Alert>\n    </Form>\n  );\n\n  const addlp = (\n    <Form name=\"addlPriceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Additional Prices</h3>\n        </Form.Label>\n        <hr></hr>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setAddl(prevState => {\n                    return { ...prevState, price: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Label>\n              <h5>Description</h5>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={e => {\n                const val = e.target.value;\n                setAddl(prevState => {\n                  return { ...prevState, description: val };\n                });\n              }}\n            ></Form.Control>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many additional prices as you want\n      </Alert>\n    </Form>\n  );\n\n  return (\n    <div>\n      <Form\n        className=\"col-md-10 offset-1 mt-5 card card-body\"\n        onSubmit={addPlan}\n        name=\"planform\"\n      >\n        {alert}\n        <Form.Group>\n          <Form.Label>\n            <h3>Plan Name</h3>\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={e => {\n              const val = e.target.value;\n              setPlan(prevState => {\n                return { ...prevState, planName: val };\n              });\n            }}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            <h3>Plan Type</h3>\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"select\"\n            onChange={e => {\n              const val = e.target.value;\n              setPlan(prevState => {\n                return { ...prevState, planType: val };\n              });\n            }}\n          >\n            <option value=\"select\" disabled>\n              select\n            </option>\n            <option value=\"monthly\">Monthly</option>\n            <option value=\"yearly\">Yearly</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"daily\">Daily</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            <h3>Product Name</h3>\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={e => {\n              const val = e.target.value;\n              setProduct(prevState => {\n                return { ...prevState, productName: val };\n              });\n            }}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            <h3>Product Price</h3>\n          </Form.Label>\n          <Form.Control\n            type=\"number\"\n            onChange={e => {\n              const val = e.target.value;\n              setProduct(prevState => {\n                return { ...prevState, price: { price: val } };\n              });\n            }}\n          ></Form.Control>\n        </Form.Group>\n        {Servi}\n        {product.services.map(service => {\n          let name;\n          if (\n            services.find(o => o.serviceId == service.serviceId) != undefined\n          ) {\n            name = services.find(o => o.serviceId == service.serviceId)\n              .serviceName;\n          }\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <Alert variant=\"info\">\n                {name} @ {service.servicePrice} &#8377; with {service.freeUnits}{\" \"}\n                {service.unitType} free &emsp;\n              </Alert>\n            </div>\n          );\n        })}\n        <Button\n          className=\"offset-md-10\"\n          variant=\"info\"\n          onClick={() => {\n            if (\n              serv.serviceId != null &&\n              serv.servicePrice != null &&\n              serv.freeUnits != null &&\n              serv.unitType\n            ) {\n              setProduct(prevState => {\n                return {\n                  ...prevState,\n                  services: [...prevState.services, serv]\n                };\n              });\n              setServ([]);\n              document.serviceForm.reset();\n              console.log(product);\n            }\n          }}\n        >\n          <strong>Add Service</strong>\n        </Button>\n        <hr></hr>\n        {addlp}\n        {product.additionalPrices.map(price => {\n          return (\n            <div className=\"card card-body mb-3\">\n              <Alert variant=\"info\">\n                {price.description} @ {price.price} &#8377;\n              </Alert>\n            </div>\n          );\n        })}\n        <Button\n          className=\"offset-md-9\"\n          variant=\"info\"\n          onClick={() => {\n            if (addl.description != null && addl.price != null) {\n              setProduct(prevState => {\n                return {\n                  ...prevState,\n                  additionalPrices: [...prevState.additionalPrices, addl]\n                };\n              });\n              document.addlPriceForm.reset();\n              setAddl([]);\n              console.log(product);\n            }\n          }}\n        >\n          <strong>Add Additional Price</strong>\n        </Button>\n        <hr></hr>\n        <Button\n          className=\"col-md-4 offset-md-4\"\n          variant=\"success\"\n          type=\"submit\"\n          onClick={() => {\n            setPlan(prevState => {\n              return { ...prevState, product: product };\n            });\n          }}\n        >\n          <strong>Add</strong>\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddPlanNew;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdatePlan/UpdatePlan.jsx",["147","148"],"import React, { useEffect, useState } from \"react\";\nimport PlanDataService from \"../Services/PlanDataService\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst UpdatePlan = props => {\n  let id = props.location.id;\n\n  const [plan, setPlan] = useState({\n    planName: \"\",\n    planType: \"\",\n    product: \"\",\n    planId: \"\"\n  });\n\n  const [upPlan, setUpPlan] = useState({\n    planName: \"\",\n    planType: \"\",\n    planId: \"\",\n    productId: \"\"\n  });\n\n  const [alert, setAlert] = useState();\n\n  const updatePlan = () => {\n    console.log(upPlan);\n    PlanDataService.updatePlan(upPlan)\n      .then(res => {\n        setAlert(<Alert variant=\"success\">Plan Updated Successfully</Alert>);\n        setTimeout(() => {\n            props.history.push({\n                pathname:\"/allplans\"\n            })\n        }, 1000);\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  useEffect(() => {\n    PlanDataService.getPlanById(id)\n      .then(res => {\n        console.log(res.data.response);\n        setPlan(res.data.response);\n        setUpPlan(prevState => {\n          return {\n            ...prevState,\n            planId: res.data.response.planId,\n            productId: res.data.response.productId\n          };\n        });\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">unable to fetch plan</Alert>);\n      });\n  }, []);\n\n  return (\n    <div className=\"col-md-8 offset-md-2 card card-body mt-5\">\n      <h2>Update Plan</h2>\n      {alert}\n      <hr></hr>\n      <h4>Plan Id : {plan.planId}</h4>\n      <div>\n        <h4>Plan Product : {plan.product.productName} </h4>\n        <Button\n          className=\"offset-md-10\"\n          variant=\"info\"\n          onClick={() => {\n            props.history.push({\n              pathname: \"/updateproduct\",\n              id: plan.productId\n            });\n          }}\n        >\n          Update Plan Product\n        </Button>\n      </div>\n\n      <hr></hr>\n      <Form.Group>\n        <Form.Label>Plan Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          defaultValue={plan.planName}\n          onChange={e => {\n            const val = e.target.value;\n            setUpPlan(prevState => {\n              return { ...prevState, planName: val };\n            });\n          }}\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          <h4>Plan Type : </h4>\n        </Form.Label>\n        <Form.Control\n          as=\"select\"\n          onChange={e => {\n            const val = e.target.value;\n            setUpPlan(prevState => {\n              return { ...prevState, planType: val };\n            });\n          }}\n        >\n          <option disabled>select</option>\n          <option value=\"monthly\">monthly</option>\n          <option value=\"yearly\">yearly</option>\n          <option value=\"weekly\">weekly</option>\n          <option value=\"daily\">daily</option>\n        </Form.Control>\n      </Form.Group>\n      <Button className=\"offset-md-10\" variant=\"success\" onClick={updatePlan}>\n        Update Plan\n      </Button>\n    </div>\n  );\n};\n\nexport default UpdatePlan;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateBundle/UpdateBundle.jsx",["149","150"],"import React, { useEffect, useState } from \"react\";\nimport BundleDataService from \"../Services/BundleDataService\";\nimport { Alert, Form, Button, Table, Col } from \"react-bootstrap\";\nimport ProductDataService from \"../Services/ProductDataService\";\n\nconst UpdateBundle = props => {\n  let id = props.location.id;\n\n  const [bundle, setBundle] = useState({\n    bundleName: \"\",\n    bundleType: \"\",\n    bundleProducts: []\n  });\n\n  const [alert, setAlert] = useState();\n\n  const [addEle, setAddEle] = useState();\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    BundleDataService.getBundleById(id)\n      .then(res => {\n        setBundle(res.data.response);\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">unable to fetch bundle</Alert>);\n      });\n\n    ProductDataService.getAllProducts()\n      .then(res => {\n        setProducts(res.data.response);\n        console.log(products);\n      })\n      .catch(res => {\n        console.log(res.response.data.response);\n      });\n  }, []);\n\n  let ele = (\n    <Form>\n      <Form.Row>\n        <Col>\n          <Form.Group>\n            <Form.Control as=\"select\">\n              <option disabled>select</option>\n              {products.map(prod => {\n                return <option>{prod.productName}</option>;\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Button variant=\"info\">Add</Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n\n  return (\n    <div className=\"col-md-8 offset-md-2 card card-body mt-5\">\n      <h2>Update Bundle</h2>\n      <hr></hr>\n      <h4>Bundle id : {bundle.bundleId}</h4>\n      <Form.Group>\n        <Form.Label>\n          <h4>Bundle Name : </h4>\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          defaultValue={bundle.bundleName}\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          <h4>Bundle Type : </h4>\n        </Form.Label>\n        <Form.Control as=\"select\">\n          <option value=\"\" disabled>\n            select\n          </option>\n          <option value=\"monthly\">monthly</option>\n          <option value=\"yearly\">yearly</option>\n          <option value=\"weekly\">weekly</option>\n          <option value=\"daily\">daily</option>\n        </Form.Control>\n      </Form.Group>\n      <Button className=\"offset-10\" variant=\"info\">\n        Update Bundle\n      </Button>\n      <hr></hr>\n      <h3>Bundle Products </h3>\n      <Table responsive>\n        <thead>\n          <tr>\n            <th>Product Name</th>\n            <th>Product Price</th>\n            <th>Update</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        {bundle.bundleProducts.map(prod => {\n          return (\n            <tr>\n              <td>{prod.product.productName}</td>\n              <td>{prod.product.price.price} &#8377;</td>\n              <td>\n                <Button\n                  variant=\"info\"\n                  onClick={() => {\n                    props.history.push({\n                      pathname: \"/updateproduct\",\n                      id: prod.product.productId\n                    });\n                  }}\n                >\n                  Update\n                </Button>\n              </td>\n              <td>\n                <Button variant=\"danger\">Delete</Button>\n              </td>\n            </tr>\n          );\n        })}\n      </Table>\n      <hr></hr>\n      {addEle}\n      <Button\n        className=\"offset-md-10\"\n        variant=\"info\"\n        onClick={() => {\n          setAddEle(ele);\n        }}\n      >\n        Add Product\n      </Button>\n    </div>\n  );\n};\n\nexport default UpdateBundle;\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":12},{"ruleId":"155","severity":1,"message":"159","line":2,"column":23,"nodeType":"157","messageId":"158","endLine":2,"endColumn":30},{"ruleId":"155","severity":1,"message":"160","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"161","line":9,"column":3,"nodeType":"157","messageId":"158","endLine":9,"endColumn":11},{"ruleId":"155","severity":1,"message":"162","line":11,"column":3,"nodeType":"157","messageId":"158","endLine":11,"endColumn":9},{"ruleId":"155","severity":1,"message":"163","line":34,"column":8,"nodeType":"157","messageId":"158","endLine":34,"endColumn":15},{"ruleId":"164","severity":1,"message":"165","line":134,"column":19,"nodeType":"166","endLine":134,"endColumn":57},{"ruleId":"155","severity":1,"message":"167","line":12,"column":10,"nodeType":"157","messageId":"158","endLine":12,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":25,"column":6,"nodeType":"170","endLine":25,"endColumn":8,"suggestions":"171"},{"ruleId":"155","severity":1,"message":"172","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"173","line":3,"column":15,"nodeType":"157","messageId":"158","endLine":3,"endColumn":20},{"ruleId":"168","severity":1,"message":"174","line":40,"column":6,"nodeType":"170","endLine":40,"endColumn":12,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":21,"column":26,"nodeType":"178","messageId":"179","endLine":21,"endColumn":28},{"ruleId":"155","severity":1,"message":"173","line":2,"column":36,"nodeType":"157","messageId":"158","endLine":2,"endColumn":41},{"ruleId":"176","severity":1,"message":"180","line":239,"column":46,"nodeType":"178","messageId":"179","endLine":239,"endColumn":48},{"ruleId":"176","severity":1,"message":"177","line":239,"column":68,"nodeType":"178","messageId":"179","endLine":239,"endColumn":70},{"ruleId":"176","severity":1,"message":"180","line":241,"column":53,"nodeType":"178","messageId":"179","endLine":241,"endColumn":55},{"ruleId":"168","severity":1,"message":"181","line":26,"column":6,"nodeType":"170","endLine":26,"endColumn":8,"suggestions":"182"},{"ruleId":"176","severity":1,"message":"180","line":133,"column":48,"nodeType":"178","messageId":"179","endLine":133,"endColumn":50},{"ruleId":"176","severity":1,"message":"177","line":133,"column":65,"nodeType":"178","messageId":"179","endLine":133,"endColumn":67},{"ruleId":"176","severity":1,"message":"180","line":135,"column":55,"nodeType":"178","messageId":"179","endLine":135,"endColumn":57},{"ruleId":"176","severity":1,"message":"177","line":16,"column":26,"nodeType":"178","messageId":"179","endLine":16,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":18,"column":26,"nodeType":"178","messageId":"179","endLine":18,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":18,"column":26,"nodeType":"178","messageId":"179","endLine":18,"endColumn":28},{"ruleId":"168","severity":1,"message":"183","line":24,"column":6,"nodeType":"170","endLine":24,"endColumn":13,"suggestions":"184"},{"ruleId":"176","severity":1,"message":"177","line":34,"column":26,"nodeType":"178","messageId":"179","endLine":34,"endColumn":28},{"ruleId":"155","severity":1,"message":"167","line":11,"column":10,"nodeType":"157","messageId":"158","endLine":11,"endColumn":15},{"ruleId":"155","severity":1,"message":"185","line":13,"column":10,"nodeType":"157","messageId":"158","endLine":13,"endColumn":14},{"ruleId":"155","severity":1,"message":"186","line":19,"column":10,"nodeType":"157","messageId":"158","endLine":19,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":40,"column":6,"nodeType":"170","endLine":40,"endColumn":8,"suggestions":"187"},{"ruleId":"176","severity":1,"message":"180","line":281,"column":44,"nodeType":"178","messageId":"179","endLine":281,"endColumn":46},{"ruleId":"176","severity":1,"message":"177","line":281,"column":66,"nodeType":"178","messageId":"179","endLine":281,"endColumn":68},{"ruleId":"176","severity":1,"message":"180","line":283,"column":51,"nodeType":"178","messageId":"179","endLine":283,"endColumn":53},{"ruleId":"155","severity":1,"message":"188","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":13},{"ruleId":"168","severity":1,"message":"169","line":57,"column":6,"nodeType":"170","endLine":57,"endColumn":8,"suggestions":"189"},{"ruleId":"155","severity":1,"message":"167","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":15},{"ruleId":"168","severity":1,"message":"190","line":37,"column":6,"nodeType":"170","endLine":37,"endColumn":8,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'brand' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'addIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'alert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'Tab' is defined but never used.","'Table' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'product', and 'props.location.id'. Either include them or remove the dependency array.",["195"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'plans'. Either include it or remove the dependency array.",["197"],"'bool' is assigned a value but never used.","'click' is assigned a value but never used.",["198"],"'axios' is defined but never used.",["199"],"React Hook useEffect has missing dependencies: 'id' and 'products'. Either include them or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"201","fix":"209"},{"desc":"201","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [id]",{"range":"213","text":"214"},"Update the dependencies array to be: [bool, id, product, props.location.id]",{"range":"215","text":"216"},"Update the dependencies array to be: [products]",{"range":"217","text":"218"},"Update the dependencies array to be: [alert, plans]",{"range":"219","text":"220"},{"range":"221","text":"214"},{"range":"222","text":"214"},"Update the dependencies array to be: [id, products]",{"range":"223","text":"224"},[731,733],"[id]",[1116,1122],"[bool, id, product, props.location.id]",[789,791],"[products]",[667,674],"[alert, plans]",[1264,1266],[1446,1448],[1016,1018],"[id, products]"]