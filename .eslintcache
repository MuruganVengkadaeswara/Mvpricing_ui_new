[{"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/App.js":"1","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/index.js":"2","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/reportWebVitals.js":"3","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/NavBar/MainNavbar.jsx":"4","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddService/AddService.jsx":"5","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllServices/AllServices.jsx":"6","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddProduct/AddProduct.jsx":"7","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddBundle/AddBundle.jsx":"8","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlan.jsx":"9","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllBundles/AllBundles.jsx":"10","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllPlans/AllPlans.jsx":"11","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllProducts/AllProducts.jsx":"12","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/HomeContents/HomeContents.jsx":"13","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProduct.jsx":"14","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ProductDataService.js":"15","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ServiceDataService.js":"16","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/PlanDataService.js":"17","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/BundleDataService.js":"18","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanExistingProduct/AddPlanExistingProduct.jsx":"19","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanNewProd/AddPlanNew.jsx":"20","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProductService/UpdateProductService.jsx":"21","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateAdditionalPrice/UpdateAdditionalPrice.jsx":"22"},{"size":270,"mtime":1609324095706,"results":"23","hashOfConfig":"24"},{"size":500,"mtime":1609322781003,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609322781003,"results":"26","hashOfConfig":"24"},{"size":3992,"mtime":1609332330880,"results":"27","hashOfConfig":"24"},{"size":1670,"mtime":1609131694095,"results":"28","hashOfConfig":"24"},{"size":2294,"mtime":1609240710758,"results":"29","hashOfConfig":"24"},{"size":9284,"mtime":1609241978313,"results":"30","hashOfConfig":"24"},{"size":4230,"mtime":1609240636865,"results":"31","hashOfConfig":"24"},{"size":1136,"mtime":1609135296491,"results":"32","hashOfConfig":"24"},{"size":2431,"mtime":1609233111111,"results":"33","hashOfConfig":"24"},{"size":2578,"mtime":1609240684062,"results":"34","hashOfConfig":"24"},{"size":3397,"mtime":1609240886363,"results":"35","hashOfConfig":"24"},{"size":507,"mtime":1609137533829,"results":"36","hashOfConfig":"24"},{"size":2654,"mtime":1609332867962,"results":"37","hashOfConfig":"24"},{"size":778,"mtime":1609150198196,"results":"38","hashOfConfig":"24"},{"size":678,"mtime":1608989617535,"results":"39","hashOfConfig":"24"},{"size":534,"mtime":1608989973359,"results":"40","hashOfConfig":"24"},{"size":574,"mtime":1609130062126,"results":"41","hashOfConfig":"24"},{"size":3457,"mtime":1609323986657,"results":"42","hashOfConfig":"24"},{"size":10378,"mtime":1609324003533,"results":"43","hashOfConfig":"24"},{"size":4215,"mtime":1609336811479,"results":"44","hashOfConfig":"24"},{"size":1865,"mtime":1609334303666,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"1r5sc7a",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/App.js",["100"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport MainNavBar from \"./components/NavBar/MainNavbar\";\n\nfunction App() {\n  return (\n    <div>\n      <MainNavBar />\n    </div>\n  );\n}\n\nexport default App;\n",["101","102"],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/index.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/reportWebVitals.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/NavBar/MainNavbar.jsx",["103","104","105","106"],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddService/AddService.jsx",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllServices/AllServices.jsx",["107"],"import React, { useEffect, useState } from \"react\";\nimport { Table, Button, Alert } from \"react-bootstrap\";\nimport serviceDataService from \"../Services/ServiceDataService\";\n\nconst AllServices = props => {\n  const [services, SetServices] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    serviceDataService\n      .getAllServices()\n      .then(res => {\n        SetServices(res.data.response);\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        } else {\n          setAlert(<Alert variant=\"danger\">Unable to connect</Alert>);\n        }\n      });\n  }, [alert]);\n\n  const deleteService = id => {\n    serviceDataService\n      .deleteServiceById(id)\n      .then(res => {\n        console.log(res.data);\n        setAlert(<Alert variant=\"success\">Deleted successfully</Alert>);\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-6 offset-md-3 mt-5 card card-body\">\n      {alert}\n      <Table responsive striped bordered>\n        <thead>\n          <tr>\n            <th>\n              <h3>Service Id</h3>\n            </th>\n            <th>\n              <h3>Service Name</h3>\n            </th>\n            <th>\n              <h3>Action</h3>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {services.map(service => {\n            return (\n              <tr key={service.serviceId}>\n                <td>\n                  <h5>\n                    <strong>{service.serviceId}</strong>\n                  </h5>\n                </td>\n                <td>\n                  <h5>\n                    <strong>{service.serviceName}</strong>\n                  </h5>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    id={service.serviceId}\n                    onClick={() => deleteService(service.serviceId)}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllServices;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddProduct/AddProduct.jsx",["108","109","110","111"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Alert, Table } from \"react-bootstrap\";\nimport \"./addproduct.css\";\nimport productDataService from \"../Services/ProductDataService\";\nimport serviceDataService from \"../Services/ServiceDataService\";\n\nconst AddProduct = props => {\n  const [product, setProduct] = useState({\n    productName: \"\",\n    price: {\n      price: \"\"\n    },\n    additionalPrices: [],\n    services: []\n  });\n  const [services, setServices] = useState([]);\n  const [serv, setServ] = useState({});\n  const [addl, setAddl] = useState({});\n  const [alert, setAlert] = useState();\n\n  const Servi = (\n    <Form name=\"serviceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Services</h3>\n          <hr></hr>\n        </Form.Label>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Select service</h5>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, serviceId: val };\n                  });\n                }}\n              >\n                {services.map(service => {\n                  return (\n                    <option key={service.serviceId} value={service.serviceId}>\n                      {service.serviceName}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>service price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, servicePrice: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Free Units</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, freeUnits: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>Unit Type</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, unitType: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many services as you want\n      </Alert>\n    </Form>\n  );\n\n  const addlp = (\n    <Form name=\"addlPriceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Additional Prices</h3>\n        </Form.Label>\n        <hr></hr>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setAddl(prevState => {\n                    return { ...prevState, price: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Label>\n              <h5>Description</h5>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={e => {\n                const val = e.target.value;\n                setAddl(prevState => {\n                  return { ...prevState, description: val };\n                });\n              }}\n            ></Form.Control>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many Additional Prices as you want\n      </Alert>\n    </Form>\n  );\n\n  useEffect(() => {\n    serviceDataService.getAllServices().then(res => {\n      console.log(res.data);\n      setServices(res.data.response);\n    });\n  }, []);\n\n  const addProduct = e => {\n    e.preventDefault();\n    console.log(product);\n    productDataService\n      .addProduct(product)\n      .then(res => {\n        if (res.data.error) {\n          setAlert(<Alert variant=\"danger\">{res.data.response}</Alert>);\n        } else {\n          setAlert(<Alert variant=\"success\">Product Added successfully</Alert>);\n          window.prodForm.reset();\n          window.scrollTo({\n            behavior: \"smooth\",\n            top: 0\n          });\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n        window.scrollTo({\n          behavior: \"smooth\",\n          top: 0\n        });\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-6 offset-md-3 mt-5 card card-body\">\n        {alert}\n        <h2>\n          <strong>Add Product</strong>\n        </h2>\n        <hr></hr>\n        <Form onSubmit={addProduct} name=\"prodForm\">\n          <Form.Group>\n            <Form.Label>\n              <h3>Product Name</h3>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={e => {\n                const val = e.target.value;\n                setProduct(prevState => {\n                  return { ...prevState, productName: val };\n                });\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              <h3>Product Price</h3>\n            </Form.Label>\n            <Form.Control\n              type=\"number\"\n              onChange={e => {\n                const val = e.target.value;\n                setProduct(prevState => {\n                  return { ...prevState, price: { price: val } };\n                });\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <div>{Servi}</div>\n          {product.services.map(service => {\n            let name;\n            if (\n              services.find(o => o.serviceId == service.serviceId) != undefined\n            ) {\n              name = services.find(o => o.serviceId == service.serviceId)\n                .serviceName;\n            }\n\n            return (\n              <div className=\"card card-body mb-3\">\n                <Alert variant=\"info\">\n                  {name} @ {service.servicePrice} &#8377; with{\" \"}\n                  {service.freeUnits} {service.unitType} free &emsp;\n                </Alert>\n              </div>\n            );\n          })}\n          <Button\n            className=\"offset-md-10\"\n            variant=\"info\"\n            onClick={() => {\n              if (\n                serv.serviceId != null &&\n                serv.servicePrice != null &&\n                serv.freeUnits != null &&\n                serv.unitType\n              ) {\n                setProduct(prevState => {\n                  return {\n                    ...prevState,\n                    services: [...prevState.services, serv]\n                  };\n                });\n                setServ([]);\n                document.serviceForm.reset();\n                console.log(product);\n              }\n            }}\n          >\n            <strong>Add Service</strong>\n          </Button>\n          <hr></hr>\n          <div>{addlp}</div>\n          {product.additionalPrices.map(price => {\n            return (\n              <div className=\"card card-body mb-3\">\n                <Alert variant=\"info\">\n                  {price.description} @ {price.price} &#8377;\n                </Alert>\n              </div>\n            );\n          })}\n          <Button\n            className=\"offset-md-9\"\n            variant=\"info\"\n            onClick={() => {\n              if (addl.description != null && addl.price != null) {\n                setProduct(prevState => {\n                  return {\n                    ...prevState,\n                    additionalPrices: [...prevState.additionalPrices, addl]\n                  };\n                });\n                document.addlPriceForm.reset();\n                setAddl([]);\n                console.log(product);\n              }\n            }}\n          >\n            <strong>Add additional price</strong>\n          </Button>\n          <hr></hr>\n          <Button\n            className=\"offset-5\"\n            size=\"lg\"\n            variant=\"success\"\n            type=\"submit\"\n            onClick={addProduct}\n          >\n            <strong>Add</strong>\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProduct;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddBundle/AddBundle.jsx",["112","113","114","115"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Button, Alert } from \"react-bootstrap\";\nimport productDataService from \"../Services/ProductDataService\";\nimport bundleDataService from \"../Services/BundleDataService\";\n\nconst AddBundle = (props) => {\n  const [products, Setproducts] = useState([]);\n  const [bundle, setBundle] = useState({\n    bundleName: \"\",\n    bundleType: \"\",\n    bundleProducts: [],\n  });\n  const [alert, setAlert] = useState();\n  const [prod, setProd] = useState(0);\n\n  useEffect(() => {\n    productDataService.getAllProducts().then((res) => {\n      console.log(products);\n      Setproducts(res.data.response);\n    });\n  }, []);\n\n  const addBundle = (e) => {\n    e.preventDefault();\n    console.log(bundle);\n    bundleDataService\n      .addBundle(bundle)\n      .then((res) => {\n        if (res.data.error) {\n          setAlert(<Alert variant=\"danger\">Unable to add Bundle</Alert>);\n        } else {\n          setAlert(<Alert variant=\"success\">Bundle Added Successfully</Alert>);\n          document.bundleForm.reset();\n        }\n      })\n      .catch((res) => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 card card-body offset-md-2 mt-5\">\n      <h1>\n        <strong>Add Bundle</strong>\n      </h1>\n      {alert}\n      <hr></hr>\n      <Form onSubmit={addBundle} name=\"bundleForm\">\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h3>Bundle Name</h3>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => {\n                  const val = e.target.value;\n                  setBundle((prevState) => {\n                    return { ...prevState, bundleName: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Label>\n              <h3>Bundle Type</h3>\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => {\n                const val = e.target.value;\n                setBundle((prevState) => {\n                  return { ...prevState, bundleType: val };\n                });\n              }}\n            >\n              <option value=\"monthly\">Monthly</option>\n              <option value=\"yearly\">Yearly</option>\n              <option value=\"weekly\">Weekly</option>\n              <option value=\"daily\">Daily</option>\n            </Form.Control>\n          </Col>\n        </Form.Row>\n        <Form.Group>\n          <Form.Label>\n            <h2>Add Product</h2>\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => {\n              const val = e.target.value;\n              setProd(val);\n            }}\n          >\n            {products.map((product) => {\n              return (\n                <option key={product.productId} value={product.productId}>{product.productName}</option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"info\"\n            className=\"offset-md-10 mb-2\"\n            onClick={() => {\n              setBundle((prevState) => {\n                return {\n                  ...prevState,\n                  bundleProducts: [\n                    ...prevState.bundleProducts,\n                    { productId: prod },\n                  ],\n                };\n              });\n              console.log(bundle);\n            }}\n          >\n            <strong>Add Product</strong>\n          </Button>\n          {bundle.bundleProducts.map((bp) => {\n            let name;\n            if (\n              products.find((o) => o.productId == bp.productId) != undefined\n            ) {\n              name = products.find((o) => o.productId == bp.productId)\n                .productName;\n            }\n            return <Alert variant=\"info\">Product : {name}</Alert>;\n          })}\n        </div>\n        <Button variant=\"success\" className=\"offset-md-5\" type=\"submit\">\n          <strong>Make Bundle</strong>\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddBundle;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlan.jsx",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllBundles/AllBundles.jsx",["116"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Alert, Button } from \"react-bootstrap\";\nimport bundleDataService from \"../Services/BundleDataService\";\n\nconst AllBundles = props => {\n  const [bundles, setBundles] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    bundleDataService\n      .getAllBundles()\n      .then(res => {\n        if (!res.data.error) {\n          setBundles(res.data.response);\n        }\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        } else {\n          setAlert(<Alert variant=\"danger\">Unable to connect</Alert>);\n        }\n      });\n  }, [alert]);\n\n  const deleteBundle = id => {\n    bundleDataService\n      .deleteBundleById(id)\n      .then(res => {\n        if (!res.data.error) {\n          setAlert(\n            <Alert variant=\"success\">Bundle Deleted Successfully</Alert>\n          );\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 offset-md-2 card card-body mt-5\">\n      <h4>\n        <strong>All Bundles</strong>\n      </h4>\n      {alert}\n      <Table responsive striped bordered>\n        <thead>\n          <tr>\n            <th>Bundle Name</th>\n            <th>Bundle Products</th>\n            <th>Bundle Type</th>\n            <th>Action</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {bundles.map(bundle => {\n            return (\n              <tr>\n                <td>{bundle.bundleName}</td>\n                <td>\n                  {bundle.bundleProducts.map(bp => {\n                    return <h6>{bp.product.productName}</h6>;\n                  })}\n                </td>\n                <td>{bundle.bundleType}</td>\n                <td>\n                  <Button variant=\"info\">Update</Button>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                      deleteBundle(bundle.bundleId);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllBundles;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllPlans/AllPlans.jsx",["117","118","119"],"import React, { useEffect, useState } from \"react\";\nimport PlanDataService from \"../Services/PlanDataService\";\nimport { Alert, Table, Button } from \"react-bootstrap\";\n\nconst AllPlans = props => {\n  const [plans, setPlans] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    PlanDataService.getAllPlans()\n      .then(res => {\n        if (!res.data.error) {\n          setPlans(res.data.response);\n          console.log(plans);\n        }\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        } else {\n          setAlert(<Alert variant=\"danger\">Unable to connect</Alert>);\n        }\n      });\n  }, [alert]);\n\n  const deletePlan = id => {\n    PlanDataService.deletePlanById(id)\n      .then(res => {\n        if (!res.data.error) {\n          setAlert(<Alert variant=\"success\">Plan Deleted Successfully</Alert>);\n        }\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        } else {\n          setAlert(<Alert variant=\"danger\">Unable to connect</Alert>);\n        }\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 offset-md-2 card card-body mt-5\">\n      <h1>\n        <strong>All Plans</strong>\n      </h1>\n\n      {alert}\n      <hr></hr>\n      <Table responsive bordered striped>\n        <thead>\n          <tr>\n            <th>Plan Id</th>\n            <th>Plan Name</th>\n            <th>Plan Type</th>\n            <th>plan Product</th>\n            <th>Action</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {plans.map(plan => {\n            return (\n              <tr key={plan.planId}>\n                <td>{plan.planId}</td>\n                <td>{plan.planName}</td>\n                <td>{plan.planType}</td>\n                <td>\n                  {plan.product.productName} @ Rs.{plan.product.price.price}\n                </td>\n                <td>\n                  <Button variant=\"info\">Update</Button>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                      deletePlan(plan.planId);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllPlans;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AllProducts/AllProducts.jsx",["120"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Alert } from \"react-bootstrap\";\nimport ProductDataService from \"../Services/ProductDataService\";\n\nconst AllProducts = props => {\n  const [products, setProducts] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    ProductDataService.getAllProducts()\n      .then(res => {\n        console.log(res.data);\n        setProducts(res.data.response);\n      })\n      .catch(res => {\n        if (res.response != undefined) {\n          setAlert(\n            <Alert variant=\"danger\">{res.response.data.response}</Alert>\n          );\n        } else {\n          setAlert(<Alert variant=\"danger\">Unable to Connect</Alert>);\n        }\n      });\n  }, [alert]);\n\n  const deleteProduct = id => {\n    ProductDataService.deleteProductById(id)\n      .then(res => {\n        if (!res.data.error) {\n          setAlert(\n            <Alert variant=\"success\">Product Deleted Successfully</Alert>\n          );\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n      });\n  };\n\n  return (\n    <div className=\"col-md-8 offset-md-2 mt-5 card card-body\">\n      <h1>\n        <strong>All Products</strong>\n      </h1>\n      {alert}\n      <hr></hr>\n      <Table responsive striped bordered>\n        <thead>\n          <tr>\n            <th>Product Id</th>\n            <th>Product Name</th>\n            <th>Product Price</th>\n            <th>Product Services</th>\n            <th>Additional Prices</th>\n            <th>Action</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {products.map(product => {\n            return (\n              <tr key={product.productId}>\n                <td>{product.productId}</td>\n                <td>{product.productName}</td>\n                <td>&#8377; {product.price.price} </td>\n                <td>\n                  {product.services.map(s => {\n                    return (\n                      <h6 key={s.serviceId}>\n                        {s.service.serviceName} @ {s.servicePrice} &#8377; /{\" \"}\n                        {s.unitType}\n                        &emsp; ( {s.freeUnits} {s.unitType} free)\n                      </h6>\n                    );\n                  })}\n                </td>\n                <td>\n                  {product.additionalPrices.map(price => {\n                    return (\n                      <h6>\n                        {price.description} @ {price.price} &#8377;\n                      </h6>\n                    );\n                  })}\n                </td>\n                <td>\n                  <Button\n                    variant=\"info\"\n                    onClick={() => {\n                      props.history.push({\n                        pathname: \"/updateproduct\",\n                        id: product.productId\n                      });\n                    }}\n                  >\n                    Update\n                  </Button>\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => deleteProduct(product.productId)}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default AllProducts;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/HomeContents/HomeContents.jsx",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProduct.jsx",["121","122","123"],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ProductDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ServiceDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/PlanDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/BundleDataService.js",[],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanExistingProduct/AddPlanExistingProduct.jsx",["124"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport productDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ProductDataService.js\";\nimport PlanDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/PlanDataService.js\"\nconst AddPlanExistingProduct = (props) => {\n  const [plan, setPlan] = useState();\n  const [products, setProducts] = useState([]);\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    productDataService.getAllProducts().then((res) => {\n      setProducts(res.data.response);\n    });\n  }, []);\n\n  const addPlan = (e) => {\n    e.preventDefault();\n    console.log(plan);\n    PlanDataService.addPlan(plan)\n      .then((res) => {\n        setAlert(<Alert variant=\"success\">Plan Added Successfully</Alert>)\n      })\n      .catch((res) => {\n        setAlert(<Alert variant=\"danger\">Unable to add plan</Alert>);\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-10 offset-1 mt-5 card card-body\">\n        <Form onSubmit={addPlan} name=\"planForm\">\n          {alert}\n          <Form.Group>\n            <Form.Label>\n              <h5>\n                <strong>Plan Name</strong>\n              </h5>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={(e) => {\n                const val = e.target.value;\n                setPlan((prevState) => {\n                  return { ...prevState, planName: val };\n                });\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              <h5>\n                <strong>Plan Type</strong>\n              </h5>\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => {\n                const val = e.target.value;\n                setPlan((prevState) => {\n                  return { ...prevState, planType: val };\n                });\n              }}\n            >\n              <option value=\"monthly\">Monthly</option>\n              <option value=\"yearly\">Yearly</option>\n              <option value=\"weekly\">Weekly</option>\n              <option value=\"daily\">Daily</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              <h5>\n                <strong>Choose Product</strong>\n              </h5>\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => {\n                const val = e.target.value;\n                setPlan((prevState) => {\n                  return { ...prevState, productId: val };\n                });\n              }}\n            >\n            <option disabled>Select</option>\n              {products.map((product) => {\n                return (\n                  <option value={product.productId}>\n                    {product.productName}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Button\n            size=\"lg\"\n            variant=\"success\"\n            className=\"offset-md-5\"\n            type=\"submit\"\n          >\n            <h5>\n              <strong>Add</strong>\n            </h5>\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddPlanExistingProduct;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/AddPlan/AddPlanNewProd/AddPlanNew.jsx",["125","126","127"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Alert } from \"react-bootstrap\";\nimport serviceDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/ServiceDataService.js\";\nimport planDataService from \"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/Services/PlanDataService.js\";\n\nconst AddPlanNew = props => {\n  const [services, setServices] = useState([]);\n  const [product, setProduct] = useState({\n    productName: \"\",\n    price: {\n      price: \"\"\n    },\n    additionalPrices: [],\n    services: []\n  });\n  const [plan, setPlan] = useState({\n    planName: \"\",\n    planType: \"\",\n    product: {}\n  });\n  const [serv, setServ] = useState({});\n  const [addl, setAddl] = useState({});\n  const [alert, setAlert] = useState();\n\n  useEffect(() => {\n    serviceDataService\n      .getAllServices()\n      .then(res => {\n        setServices(res.data.response);\n      })\n      .catch(res => {\n        console.log(res);\n      });\n  }, []);\n\n  const addPlan = e => {\n    e.preventDefault();\n    setPlan(prevState => {\n      return { ...prevState, product: product };\n    });\n    planDataService\n      .addPlan(plan)\n      .then(res => {\n        if (!res.data.error) {\n          setAlert(<Alert variant=\"success\">Plan Added successfully</Alert>);\n          window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n          });\n          document.planform.reset();\n        }\n      })\n      .catch(res => {\n        setAlert(<Alert variant=\"danger\">{res.response.data.response}</Alert>);\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      });\n  };\n\n  const Servi = (\n    <Form name=\"serviceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Services</h3>\n          <hr></hr>\n        </Form.Label>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Select service</h5>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, serviceId: val };\n                  });\n                }}\n              >\n                {services.map(service => {\n                  return (\n                    <option value={service.serviceId}>\n                      {service.serviceName}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>service price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, servicePrice: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>Free Units</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, freeUnits: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <h5>Unit Type</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setServ(prevState => {\n                    return { ...prevState, unitType: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many services as you want\n      </Alert>\n    </Form>\n  );\n\n  const addlp = (\n    <Form name=\"addlPriceForm\">\n      <Form.Group className=\"card servicesblk\">\n        <Form.Label>\n          <h3>Additional Prices</h3>\n        </Form.Label>\n        <hr></hr>\n        <Form.Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>\n                <h5>price</h5>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value;\n                  setAddl(prevState => {\n                    return { ...prevState, price: val };\n                  });\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Label>\n              <h5>Description</h5>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={e => {\n                const val = e.target.value;\n                setAddl(prevState => {\n                  return { ...prevState, description: val };\n                });\n              }}\n            ></Form.Control>\n          </Col>\n        </Form.Row>\n      </Form.Group>\n      <Alert\n        style={{\n          backgroundColor: \"#FF9B714C\",\n          color: \"#2E2F2F\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Please Add as many additional prices as you want\n      </Alert>\n    </Form>\n  );\n\n  return (\n    <div>\n      <Form\n        className=\"col-md-10 offset-1 mt-5 card card-body\"\n        onSubmit={addPlan}\n        name=\"planform\"\n      >\n        {alert}\n        <Form.Group>\n          <Form.Label>\n            <h3>Plan Name</h3>\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={e => {\n              const val = e.target.value;\n              setPlan(prevState => {\n                return { ...prevState, planName: val };\n              });\n            }}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            <h3>Plan Type</h3>\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"select\"\n            onChange={e => {\n              const val = e.target.value;\n              setPlan(prevState => {\n                return { ...prevState, planType: val };\n              });\n            }}\n          >\n            <option value=\"select\" disabled>\n              select\n            </option>\n            <option value=\"monthly\">Monthly</option>\n            <option value=\"yearly\">Yearly</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"daily\">Daily</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            <h3>Product Name</h3>\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={e => {\n              const val = e.target.value;\n              setProduct(prevState => {\n                return { ...prevState, productName: val };\n              });\n            }}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            <h3>Product Price</h3>\n          </Form.Label>\n          <Form.Control\n            type=\"number\"\n            onChange={e => {\n              const val = e.target.value;\n              setProduct(prevState => {\n                return { ...prevState, price: { price: val } };\n              });\n            }}\n          ></Form.Control>\n        </Form.Group>\n        {Servi}\n        {product.services.map(service => {\n          let name;\n          if (\n            services.find(o => o.serviceId == service.serviceId) != undefined\n          ) {\n            name = services.find(o => o.serviceId == service.serviceId)\n              .serviceName;\n          }\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <Alert variant=\"info\">\n                {name} @ {service.servicePrice} &#8377; with {service.freeUnits}{\" \"}\n                {service.unitType} free &emsp;\n              </Alert>\n            </div>\n          );\n        })}\n        <Button\n          className=\"offset-md-10\"\n          variant=\"info\"\n          onClick={() => {\n            if (\n              serv.serviceId != null &&\n              serv.servicePrice != null &&\n              serv.freeUnits != null &&\n              serv.unitType\n            ) {\n              setProduct(prevState => {\n                return {\n                  ...prevState,\n                  services: [...prevState.services, serv]\n                };\n              });\n              setServ([]);\n              document.serviceForm.reset();\n              console.log(product);\n            }\n          }}\n        >\n          <strong>Add Service</strong>\n        </Button>\n        <hr></hr>\n        {addlp}\n        {product.additionalPrices.map(price => {\n          return (\n            <div className=\"card card-body mb-3\">\n              <Alert variant=\"info\">\n                {price.description} @ {price.price} &#8377;\n              </Alert>\n            </div>\n          );\n        })}\n        <Button\n          className=\"offset-md-9\"\n          variant=\"info\"\n          onClick={() => {\n            if (addl.description != null && addl.price != null) {\n              setProduct(prevState => {\n                return {\n                  ...prevState,\n                  additionalPrices: [...prevState.additionalPrices, addl]\n                };\n              });\n              document.addlPriceForm.reset();\n              setAddl([]);\n              console.log(product);\n            }\n          }}\n        >\n          <strong>Add Additional Price</strong>\n        </Button>\n        <hr></hr>\n        <Button\n          className=\"col-md-4 offset-md-4\"\n          variant=\"success\"\n          type=\"submit\"\n          onClick={() => {\n            setPlan(prevState => {\n              return { ...prevState, product: product };\n            });\n          }}\n        >\n          <strong>Add</strong>\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddPlanNew;\n","/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateProductService/UpdateProductService.jsx",["128","129","130","131"],"/home/onebill/Desktop/onebill_pricing_ui_new/onebill_pricing_ui/src/components/UpdateProduct/UpdateAdditionalPrice/UpdateAdditionalPrice.jsx",["132","133"],{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":12},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"134","severity":1,"message":"142","line":2,"column":23,"nodeType":"136","messageId":"137","endLine":2,"endColumn":30},{"ruleId":"134","severity":1,"message":"143","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"134","severity":1,"message":"144","line":9,"column":3,"nodeType":"136","messageId":"137","endLine":9,"endColumn":11},{"ruleId":"134","severity":1,"message":"145","line":11,"column":3,"nodeType":"136","messageId":"137","endLine":11,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":16,"column":26,"nodeType":"148","messageId":"149","endLine":16,"endColumn":28},{"ruleId":"134","severity":1,"message":"150","line":2,"column":36,"nodeType":"136","messageId":"137","endLine":2,"endColumn":41},{"ruleId":"146","severity":1,"message":"151","line":237,"column":46,"nodeType":"148","messageId":"149","endLine":237,"endColumn":48},{"ruleId":"146","severity":1,"message":"147","line":237,"column":68,"nodeType":"148","messageId":"149","endLine":237,"endColumn":70},{"ruleId":"146","severity":1,"message":"151","line":239,"column":53,"nodeType":"148","messageId":"149","endLine":239,"endColumn":55},{"ruleId":"152","severity":1,"message":"153","line":21,"column":6,"nodeType":"154","endLine":21,"endColumn":8,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"151","line":126,"column":48,"nodeType":"148","messageId":"149","endLine":126,"endColumn":50},{"ruleId":"146","severity":1,"message":"147","line":126,"column":65,"nodeType":"148","messageId":"149","endLine":126,"endColumn":67},{"ruleId":"146","severity":1,"message":"151","line":128,"column":55,"nodeType":"148","messageId":"149","endLine":128,"endColumn":57},{"ruleId":"146","severity":1,"message":"147","line":18,"column":26,"nodeType":"148","messageId":"149","endLine":18,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":18,"column":26,"nodeType":"148","messageId":"149","endLine":18,"endColumn":28},{"ruleId":"152","severity":1,"message":"156","line":26,"column":6,"nodeType":"154","endLine":26,"endColumn":13,"suggestions":"157"},{"ruleId":"146","severity":1,"message":"147","line":36,"column":26,"nodeType":"148","messageId":"149","endLine":36,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":16,"column":26,"nodeType":"148","messageId":"149","endLine":16,"endColumn":28},{"ruleId":"134","severity":1,"message":"158","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"134","severity":1,"message":"150","line":3,"column":15,"nodeType":"136","messageId":"137","endLine":3,"endColumn":20},{"ruleId":"152","severity":1,"message":"159","line":40,"column":6,"nodeType":"154","endLine":40,"endColumn":12,"suggestions":"160"},{"ruleId":"134","severity":1,"message":"161","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"146","severity":1,"message":"151","line":281,"column":44,"nodeType":"148","messageId":"149","endLine":281,"endColumn":46},{"ruleId":"146","severity":1,"message":"147","line":281,"column":66,"nodeType":"148","messageId":"149","endLine":281,"endColumn":68},{"ruleId":"146","severity":1,"message":"151","line":283,"column":51,"nodeType":"148","messageId":"149","endLine":283,"endColumn":53},{"ruleId":"134","severity":1,"message":"162","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":26},{"ruleId":"134","severity":1,"message":"163","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":15},{"ruleId":"134","severity":1,"message":"164","line":14,"column":10,"nodeType":"136","messageId":"137","endLine":14,"endColumn":14},{"ruleId":"152","severity":1,"message":"165","line":36,"column":6,"nodeType":"154","endLine":36,"endColumn":8,"suggestions":"166"},{"ruleId":"134","severity":1,"message":"163","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":15},{"ruleId":"152","severity":1,"message":"165","line":25,"column":6,"nodeType":"154","endLine":25,"endColumn":8,"suggestions":"167"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'NavLink' is defined but never used.","'brand' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Table' is defined but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.","ArrayExpression",["170"],"React Hook useEffect has a missing dependency: 'plans'. Either include it or remove the dependency array.",["171"],"'Tab' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'product', and 'props.location.id'. Either include them or remove the dependency array.",["172"],"'axios' is defined but never used.","'ServiceDataService' is defined but never used.","'alert' is assigned a value but never used.","'bool' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["173"],["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"181","fix":"183"},"Update the dependencies array to be: [products]",{"range":"184","text":"185"},"Update the dependencies array to be: [alert, plans]",{"range":"186","text":"187"},"Update the dependencies array to be: [bool, id, product, props.location.id]",{"range":"188","text":"189"},"Update the dependencies array to be: [id]",{"range":"190","text":"191"},{"range":"192","text":"191"},[667,669],"[products]",[755,762],"[alert, plans]",[1116,1122],"[bool, id, product, props.location.id]",[1270,1272],"[id]",[731,733]]